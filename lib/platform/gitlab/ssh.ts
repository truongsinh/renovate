import os from 'os';
import path from 'path';

import { logger } from '../../logger';
import { exec } from '../../util/exec';
import { readFile } from '../../util/fs';
import { GitlabHttp } from '../../util/http/gitlab';

export async function prepareTemporarySshKey(
  gitlabApi: GitlabHttp
): Promise<void> {
  const keyExpiresAt = new Date(Date.now() + 60 * 60 * 1000);
  const keyTitle = `Temporarily generated by Renovate bot ${keyExpiresAt.toISOString()}`;

  const keyFileName = path.join(
    os.tmpdir(),
    `id_ed25519-${keyExpiresAt.getTime()}`
  );
  await exec(
    `cat /dev/zero | ssh-keygen -q -N "" -t ed25519 -f ${keyFileName} -C "${keyTitle}"`
  );
  const pubKey = await readFile(`${keyFileName}.pub`, 'utf8');
  logger.debug('Temporarily SSH pub key created');
  logger.debug(pubKey);
  const gitSshFromKeyCommand = ` -i ${keyFileName}`;
  if (!process.env.GIT_SSH_COMMAND.includes(gitSshFromKeyCommand)) {
    process.env.GIT_SSH_COMMAND += `${gitSshFromKeyCommand}`;
  }
  logger.debug('Current GIT_SSH_COMMAND');
  logger.debug(process.env.GIT_SSH_COMMAND);
}
